.link {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  border-left: 1px solid transparent;

  .description {
    display: flex;
    align-items: center;
    height: 0;
    transition: height .3s ease-in-out;
    margin: 0;
    width: 100%;
    overflow: hidden;

    & span {
      opacity: 0;
      padding: 17px;
      text-align: left;
      font-size: 0.875rem;
      color: var(--text-color-primary);
    }

    &.link_open {
      height: auto;
    }

    & span.fade {
      opacity: 1;
      transition: opacity 1s ease-in-out;

    }
  }

  .additionalInfo {
    font-size: 13px;
    font-variant: all-small-caps;
    text-align: left;
    padding-left: 20px;
    gap: 15px;
    display: flex;
    padding-bottom: 10px;
  }

  &:hover>a {
    color: var(--accentColor);
  }

  &:hover .lcontrols {
    display: flex;
    cursor: pointer;
    opacity: 1;
  }

  &>a {
    display: flex;
    align-items: center;
    min-height: 35px;
    overflow: hidden;
    gap: 10px;
    letter-spacing: .2px;
    width: 85%;
  }

  & a span:first-of-type {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    width: 77%;
  }

  & img {
    width: 16px;
    margin-left: 15px;
    transition: margin .3s ease-in-out;
    border-radius: 3px;
    aspect-ratio: 1/1;
  }

  /*Debe ser n+9 al principio para evitar el shift y al pasar 1s a√±adir n+10*/
  &:nth-of-type(n+9) {
    display: none;
  }

  @media (hover) {
    .lcontrols {
      opacity: 0;
    }
  }

  .lcontrols {
    display: flex;
    margin-right: 11px;
    gap: 3px;


    & a {
      display: flex;
    }

    .arrow_left {
      transform: rotate(90deg);
    }

    .rotate svg {
      transform: rotate(0deg);
    }
  }
}
.animated_paste {
  position: relative;
  background-color: var(--color-primary);
  border-radius: var(--button-radius);
}
@property --angle {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}
.animated_paste::after, .animated_paste::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  border-radius: var(--button-radius);
  background-image: conic-gradient(from var(--angle), purple, green, red, lime, purple);
  translate: -50% -50%;
  padding: 2px;
  z-index: -1;
  box-sizing: content-box;
  animation: 3s spin linear infinite;
}
@keyframes spin {
  from {
    --angle: 0deg;
  }
  to {
    --angle: 360deg;
  }
}
.link::before {
  filter: blur(1.5rem);
  opacity: .5;
}

/* DND */
.link_dragged {
  display: flex;
  height: var(--link-height);
  border-radius: var(--button-radius);
  background-color: var(--accentColor);
}

.floatLink:hover {
  background-color: var(--color-primary);
  border-radius: var(--button-radius);
  height: var(--link-height);
}